# Copyright (c) 2009-2012 VMware, Inc.

# This is a squash of all previous migrations for ccng.  This needed to be done
# to support mysql as a database option for ccng.
#
# As the previous set of migrations evolved, they ended up droping columns
# as the schema was changed  to support new/changing feature sets. However,
# some of these columns had constraints, inluding foreign key constraints.
# While sqlite and postgress will allow you to drop a column with an existing
# foreign key constraint, mysql will not.  The only way to drop such a column
# when running against  mysql is to explicitly drop the constraint first.
# However, the standard usage of the sequel migations is to just accept
# the default constraint name generated by the DDL, so dropping the constraint
# by name is not possible without reverse engineering the naming conventions
# of the sequel migrations.  Obviouslly, that would be very brittle.
#
# This reset of the migrations explicitly names every constraint in order
# to support these sort of changes on mysql, pg, and sqlite going
# forward.
#
# This is the approach recommended in
# http://code.google.com/p/ruby-sequel/issues/detail?id=284

Sequel.migration do

  change do
    run "update routes set host = '*' where host = ''"
    alter_table :routes do
      set_column_type :host, String, :case_insensitive => true
      add_constraint :routes_host_not_empty, ~{:host => ''}
    end

    alter_table :service_bindings do
      set_column_allow_null :gateway_name
      set_column_default :gateway_name, nil
    end
  end
end
