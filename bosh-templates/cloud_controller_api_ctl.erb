#!/bin/bash


export CC_JOB_DIR=/var/vcap/jobs/cloud_controller_ng
source $CC_JOB_DIR/bin/ruby_version.sh

CC_PACKAGE_DIR=/var/vcap/packages/cloud_controller_ng

RUN_DIR=/var/vcap/sys/run/cloud_controller_ng
LOG_DIR=/var/vcap/sys/log/cloud_controller_ng
PIDFILE=$RUN_DIR/cloud_controller_ng.pid

export CONFIG_DIR=$CC_JOB_DIR/config
export CLOUD_CONTROLLER_NG_CONFIG=$CONFIG_DIR/cloud_controller_ng.yml
export BUNDLE_GEMFILE=$CC_PACKAGE_DIR/cloud_controller_ng/Gemfile
export HOME=/home/vcap # rake needs it to be set to run tasks
export TMPDIR=/var/vcap/data/cloud_controller_ng/tmp

<% if properties.env %>
<% if properties.env.http_proxy %>
export HTTP_PROXY='<%= properties.env.http_proxy %>'
export http_proxy='<%= properties.env.http_proxy %>'
<% end %>
<% if properties.env.https_proxy %>
export HTTPS_PROXY='<%= properties.env.https_proxy %>'
export https_proxy='<%= properties.env.https_proxy %>'
<% end %>
<% if properties.env.no_proxy %>
export NO_PROXY='<%= properties.env.no_proxy %>'
export no_proxy='<%= properties.env.no_proxy %>'
<% end %>
<% end %>

export C_INCLUDE_PATH=/var/vcap/packages/libpq/include:$C_INCLUDE_PATH
export LIBRARY_PATH=/var/vcap/packages/libpq/lib:$LIBRARY_PATH
export LANG=en_US.UTF-8

export NEWRELIC_ENABLE=<%= !!properties.cc.newrelic.license_key || p("cc.development_mode") %>
export NRCONFIG=$CONFIG_DIR/newrelic.yml
export NEW_RELIC_ENV=<%= p("cc.newrelic.environment_name") %>

source /var/vcap/packages/common/utils.sh

case $1 in

  start)
    mkdir -p $RUN_DIR
    mkdir -p $LOG_DIR
    mkdir -p $TMPDIR

    chown vcap:vcap $RUN_DIR
    chown vcap:vcap $LOG_DIR
    chown vcap:vcap $TMPDIR

    pid_guard $PIDFILE "Cloud controller ng"

    <% if properties.nfs_server.address %>
    export NFS_SHARE=<%= p('nfs_server.share_path') %>

    echo "Checking for nfs to be mounted"

    nfs_check_attempts=0
    while [[ ! -f $NFS_SHARE/shared/.nfs_test ]]; do
      sleep 0.1
      nfs_check_attempts=$((nfs_check_attempts+1))

      if [[ $nfs_check_attempts -eq 300 ]]; then
        echo "Failed to find nfs mount"
        exit 1
      fi
    done

    echo "nfs is mounted"
    <% end %>

    <% if_p("cc.directories.diagnostics") do |diag_dir| %>
    mkdir -p <%= diag_dir %>
    chown vcap:vcap <%= diag_dir %>
    <% end %>

    source $CC_JOB_DIR/bin/handle_local_blobstore.sh

    # Configure the core file location
    mkdir -p /var/vcap/sys/cores
    chown vcap:vcap /var/vcap/sys/cores
    echo /var/vcap/sys/cores/core-%e-%s-%p-%t > /proc/sys/kernel/core_pattern

    ulimit -c unlimited

    # TODO: remove the -m when we have a stand alone utility for loading
    # frameworks etc, and call those utilities here.  See corresponding
    # comments in cc runner.
    <% if spec.index.to_i == 0 %>
    exec chpst -u vcap:vcap $CC_PACKAGE_DIR/cloud_controller_ng/bin/cloud_controller -m \<% else %>
    exec chpst -u vcap:vcap $CC_PACKAGE_DIR/cloud_controller_ng/bin/cloud_controller \<% end %>
      -c $CLOUD_CONTROLLER_NG_CONFIG
    ;;

  stop)
    kill_and_wait $PIDFILE
    ;;

  *)
    echo "Usage: cloud_controller_ng_ctl {start|stop}"
    ;;

esac
