version: "3.3"
services:

  # Postgres
  postgres:
    container_name: postgres
    image: postgres:16-alpine
    environment:
      POSTGRES_PASSWORD: supersecret
    command: # logs every statement sent to the server. Slow, but helpful. Fills up disk Quickly !
      - "postgres"
      - "-c"
      - "log_statement=all"
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - cc-net
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # MySQL
  mysql:
    container_name: mysql
    image: mysql:8.2
    environment:
      MYSQL_ROOT_PASSWORD: supersecret
    ports:
      - "127.0.0.1:3306:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 20s
      retries: 3
    networks:
      - cc-net
    restart: unless-stopped

  # UAA
  uaa:
    container_name: uaa
    build:
      context: .devcontainer/images/uaa
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/info" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cc-net
    restart: unless-stopped

  # Minio S3 Blobstore
  minio:
    container_name: minio
    image: minio/minio:latest
    command: minio server --address ":9001" "/data"
    ports:
      - "127.0.0.1:9001:9001"
      - "127.0.0.1:9000:9000"
    environment:
      MC_HOST_custom: http://localhost:9001
    healthcheck:
      test:
        [
          "CMD",
          "mc",
          "ready",
          "custom"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cc-net
    restart: unless-stopped

  # CATS Configurable Service Broker
  catsbroker:
    container_name: catsbroker
    build:
      context: .devcontainer/images/catsbroker
      dockerfile: Dockerfile
    ports:
      - "127.0.0.1:9292:9292"
      - "127.0.0.1:9393:80"
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "http://localhost:9292/v2/catalog"
        ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - cc-net
    restart: unless-stopped

  # Nginx Reverse Proxy (For uploads e.g. Packages)
  nginx:
    container_name: nginx
    build:
      context: .devcontainer/images/nginx
      dockerfile: Dockerfile
      args:
        ENABLED_MODULES: nginx_upload_module
    ports:
      - "0.0.0.0:80:80"
    networks:
      - cc-net
    volumes:
      - .devcontainer/images/nginx/conf:/usr/local/nginx/conf:ro
      - ./tmp:/tmp
    cap_add:
      - NET_BIND_SERVICE
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

networks:
  cc-net:
