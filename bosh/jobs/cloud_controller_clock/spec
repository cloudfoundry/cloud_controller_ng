---
name: cloud_controller_clock

description: "The Cloud Controller clock periodically schedules Cloud Controller clean up tasks for app usage events, audit events, failed jobs, and more. Only single instance of this job is necessary."

templates:
  bpm.yml.erb: config/bpm.yml
  bin/cloud_controller_clock.erb: bin/cloud_controller_clock

  cloud_controller_ng.yml.erb: config/cloud_controller_ng.yml
  cloud_controller_clock_ctl.erb: bin/cloud_controller_clock_ctl
  newrelic.yml.erb: config/newrelic.yml
  stacks.yml.erb: config/stacks.yml
  drain.sh.erb: bin/drain
  ruby_version.sh.erb: bin/ruby_version.sh
  console.erb: bin/console
  pre-start.sh.erb: bin/pre-start
  mutual_tls_ca.crt.erb: config/certs/mutual_tls_ca.crt
  mutual_tls.crt.erb: config/certs/mutual_tls.crt
  mutual_tls.key.erb: config/certs/mutual_tls.key
  uaa_ca.crt.erb: config/certs/uaa_ca.crt
  db_ca.crt.erb: config/certs/db_ca.crt

packages:
  - capi_utils
  - cloud_controller_ng
  - nginx
  - nginx_newrelic_plugin
  - libpq
  - mariadb_connector_c
  - ruby-2.4

consumes:
- name: database
  type: database
  optional: true

properties:
  bpm.enabled:
    description: "Experimental feature flag: Enable Bosh Process Manager"
    default: false

  ssl.skip_cert_verify:
    description: "specifies that the job is allowed to skip ssl cert verification"
    default: false

  system_domain:
    description: "Domain reserved for CF operator, base URL where the login, uaa, and other non-user apps listen"

  cc.external_port:
    description: "External Cloud Controller port"
    default: 9022
  cc.tls_port:
    description: "External Cloud Controller port"
    default: 9023
  cc.internal_service_hostname:
    description: "Internal hostname used to resolve the address of the Cloud Controller"
    default: "cloud-controller-ng.service.cf.internal"

  cc.jobs.global.timeout_in_seconds:
    description: "The longest any job can take before it is cancelled unless overriden per job"
    default: 14400 # 4 hours
  cc.jobs.app_usage_events_cleanup.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.blobstore_delete.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.diego_sync.timeout_in_seconds:
    description: "The longest the diego sync job can take before another is enqueued"
    default: 600

  cc.app_usage_events.cutoff_age_in_days:
    description: "How old an app usage event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.service_usage_events.cutoff_age_in_days:
    description: "How old a service usage event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.audit_events.cutoff_age_in_days:
    description: "How old an audit event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.failed_jobs.cutoff_age_in_days:
    description: "How old a failed job should stay in cloud controller database before being cleaned up"
    default: 31
  cc.completed_tasks.cutoff_age_in_days:
    description: "How long a completed task will stay in cloud controller database before being cleaned up based on last updated time with success or failure."
    default: 31

  cc.pending_droplets.frequency_in_seconds:
    description: "How often the pending droplets cleanup job runs"
    default: 300
  cc.pending_builds.frequency_in_seconds:
    description: "How often the pending builds cleanup job runs"
    default: 300
  cc.diego_sync.frequency_in_seconds:
    description: "How often to synchronize CC's database with Diego's"
    default: 30

  cc.external_protocol:
    default: "https"
    description: "The protocol used to access the CC API from an external entity"
  cc.external_host:
    default: "api"
    description: "Host part of the cloud_controller api URI, will be joined with value of 'domain'"

  cc.internal_api_user:
    default: "internal_user"
    description: "User name used by Diego to access internal endpoints"
  cc.internal_api_password:
    description: "Password used by Diego to access internal endpoints"

  cc.db_logging_level:
    default: "debug2"
    description: "Log level for cc database operations"

  cc.logging_level:
    default: "info"
    description: "Log level for cc"
  cc.logging_max_retries:
    default: 1
    description: "Passthru value for Steno logger"

  cc.staging_timeout_in_seconds:
    default: 900
    description: "Timeout for staging a droplet"
  cc.default_health_check_timeout:
    default: 60
    description: "Default health check timeout (in seconds) that can be set for the app"

  cc.stacks:
    default:
      - name: "cflinuxfs2"
        description: "Cloud Foundry Linux-based filesystem"
    description: "Tag used by the DEA to describe capabilities (i.e. 'Windows7', 'python-linux'). DEA and CC must agree."
  cc.default_stack:
    default: "cflinuxfs2"
    description: "The default stack to use if no custom stack is specified by an app."

  cc.staging_upload_user:
    default: ""
    description: "User name used to access internal endpoints of Cloud Controller to upload files when staging"
  cc.staging_upload_password:
    default: ""
    description: "User's password used to access internal endpoints of Cloud Controller to upload files when staging"

  cc.resource_pool.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.resource_pool.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.resource_pool.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.resource_pool.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.resource_pool.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.resource_pool.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.resource_pool.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.resource_pool.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.resource_pool.minimum_size:
    description: "Minimum size of a resource to add to the pool"
    default: 65536
  cc.resource_pool.maximum_size:
    description: "Maximum size of a resource to add to the pool"
    default: 536870912
  cc.resource_pool.resource_directory_key:
    description: "Directory (bucket) used store app resources.  It does not have be pre-created."
    default: "cc-resources"
  cc.resource_pool.fog_connection:
    description: "Fog connection hash"
  cc.resource_pool.cdn.uri:
    description: "URI for a CDN to used for resource pool downloads"
    default: ""
  cc.resource_pool.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.resource_pool.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.packages.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.packages.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.packages.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.packages.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.packages.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.packages.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.packages.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.packages.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.packages.app_package_directory_key:
    description: "Directory (bucket) used store app packages.  It does not have be pre-created."
    default: "cc-packages"
  cc.packages.max_package_size:
    description: "Maximum size of application package"
    default: 1073741824
  cc.packages.fog_connection:
    description: "Fog connection hash"
  cc.packages.cdn.uri:
    description: "URI for a CDN to used for app package downloads"
    default: ""
  cc.packages.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.packages.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.droplets.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.droplets.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.droplets.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.droplets.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.droplets.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.droplets.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.droplets.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.droplets.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.droplets.droplet_directory_key:
    description: "Directory (bucket) used store droplets.  It does not have be pre-created."
    default: "cc-droplets"
  cc.droplets.fog_connection:
    description: "Fog connection hash"
  cc.droplets.cdn.uri:
    description: "URI for a CDN to used for droplet downloads"
    default: ""
  cc.droplets.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.droplets.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.buildpacks.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.buildpacks.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.buildpacks.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.buildpacks.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.buildpacks.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.buildpacks.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.buildpacks.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.buildpacks.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.buildpacks.buildpack_directory_key:
    description: "Directory (bucket) used store buildpacks.  It does not have be pre-created."
    default: "cc-buildpacks"
  cc.buildpacks.fog_connection:
    description: "Fog connection hash"
  cc.buildpacks.cdn.uri:
    description: "URI for a CDN to used for buildpack downloads"
    default: ""
  cc.buildpacks.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.buildpacks.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccdb.databases:
    description: "Contains the name of the database on the database server"
  ccdb.roles:
    description: "Users to create on the database when seeding"
  ccdb.db_scheme:
    description: "The type of database being used. mysql or postgres"
    default: postgres
  ccdb.address:
    description: "The address of the database server"
  ccdb.port:
    description: "The port of the database server"
  ccdb.max_connections:
    default: 25
    description: "Maximum connections for Sequel"
  ccdb.pool_timeout:
    default: 10
    description: "The timeout for Sequel pooled connections"
  ccdb.ca_cert:
    default: ~
    description: "The ca cert to use when communicating with the database over SSL"
  ccdb.ssl_verify_hostname:
    default: true
    description: "Verify that the database SSL certificate matches the host to which the connection is attempted"

  cc.allow_app_ssh_access:
    default: true
    description: "Allow users to change the value of the app-level allow_ssh attribute"
  cc.default_app_ssh_access:
    default: true
    description: "When ssh is allowed and not explicitly set in the application, new applications will start with ssh service enabled"

  uaa.ca_cert:
    description: "The certificate authority being used by UAA"
  uaa.ssl.port:
    description: "The port used by UAA for ssl connections"
    default: 8443
  uaa.port:
    description: "The port used by UAA for non-ssl connections"
  cc.uaa.internal_url:
    description: "The internal url used by UAA"
    default: "uaa.service.cf.internal"

  metron_endpoint.host:
    description: "The host used to emit messages to the Metron agent"
    default: "127.0.0.1"
  metron_endpoint.port:
    description: "The port used to emit messages to the Metron agent"
    default: 3457

  cc.db_encryption_key:
    default: ""
    description: "key for encrypting sensitive values in the CC database"

  cc.database_encryption_keys.keys:
    default: {}
    description: "label-key pairs for encrypting sensitive values in the CC database"

  cc.database_encryption_keys.current_key_label:
    default: ""
    description: "current key label for encrypting values in the CC database"

  cc.default_app_memory:
    default: 1024
    description: "How much memory given to an app if not specified"
  cc.default_app_disk_in_mb:
    default: 1024
    description: "The default disk space an app gets"
  cc.maximum_app_disk_in_mb:
    default: 2048
    description: "The maximum amount of disk a user can request"

  cc.newrelic.license_key:
    default: ~
    description: "The api key for NewRelic"
  cc.newrelic.environment_name:
    default: "development"
    description: "The environment name used by NewRelic"
  cc.newrelic.developer_mode:
    default: false
    description: "Activate NewRelic developer mode"
  cc.newrelic.monitor_mode:
    default: false
    description: "Activate NewRelic monitor mode"
  cc.newrelic.log_file_path:
    default: "/var/vcap/sys/log/cloud_controller_ng/newrelic"
    description: "The location for NewRelic to log to"
  cc.newrelic.capture_params:
    default: false
    description: "Capture and send query params to NewRelic"
  cc.newrelic.transaction_tracer.enabled:
    default: false
    description: "Enable transaction tracing in NewRelic"
  cc.newrelic.transaction_tracer.record_sql:
    default: "off"
    description: "NewRelic's SQL statement recording mode: [off | obfuscated | raw]"

  uaa.clients.cc_service_broker_client.secret:
    description: "(DEPRECATED) - Used for generating SSO clients for service brokers."
  uaa.clients.cc_service_broker_client.scope:
    description: "(DEPRECATED) - Used to grant scope for SSO clients for service brokers"
    default: "openid,cloud_controller_service_permissions.read"

  uaa.clients.cc-service-dashboards.secret:
    description: "Used for generating SSO clients for service brokers."
  uaa.clients.cc-service-dashboards.scope:
    description: "Used to grant scope for SSO clients for service brokers"
    default: "openid,cloud_controller_service_permissions.read"

  uaa.clients.cc_routing.secret:
    description: "Used for fetching routing information from the Routing API"
  routing_api.enabled:
    description: "Whether to expose the routing_endpoint listed at /v2/info. Enable this after deploying the Routing API"
    default: false

  cc.instance_file_descriptor_limit:
    description: "The file descriptors made available to each app instance"
    default: 16384

  cc.bits_service.enabled:
    description: "Enable integration of the bits-service incubator (experimental)"
    default: false
  cc.bits_service.public_endpoint:
    description: "Public url for the bits-service service"
    default: ""
  cc.bits_service.private_endpoint:
    description: "Private url for the bits-service service"
    default: ""
  cc.bits_service.username:
    description: "Username for the bits-service"
    default: ""
  cc.bits_service.password:
    description: "Password for the bits-service"
    default: ""

  cc.thresholds.api.alert_if_above_mb:
    description: "The cc will alert if memory remains above this threshold for 3 monit cycles"
    default: 3500
  cc.thresholds.api.restart_if_consistently_above_mb:
    description: "The cc will restart if memory remains above this threshold for 15 monit cycles"
    default: 3500
  cc.thresholds.api.restart_if_above_mb:
    description: "The cc will restart if memory remains above this threshold for 3 monit cycles"
    default: 3750

  cc.diego.bbs.url:
    description: "URL of the BBS Server"
    default: https://bbs.service.cf.internal:8889

  cc.mutual_tls.ca_cert:
    description: "PEM-encoded CA certificate for secure, mutually authenticated TLS communication"
  cc.mutual_tls.public_cert:
    description: "PEM-encoded certificate for secure, mutually authenticated TLS communication"
  cc.mutual_tls.private_key:
    description: "PEM-encoded key for secure, mutually authenticated TLS communication"

  cc.diego.nsync_url:
    default: http://nsync.service.cf.internal:8787
    description: "URL of the Diego nsync service"
  cc.diego.stager_url:
    default: http://stager.service.cf.internal:8888
    description: "URL of the Diego stager service"
  cc.diego.tps_url:
    default: http://tps.service.cf.internal:1518
    description: "URL of the Diego tps service"
  cc.diego.file_server_url:
    description: "URL of file server"
    default: http://file-server.service.cf.internal:8080
  cc.diego.cc_uploader_url:
    description: "URL of cc uploader"
    default: http://cc-uploader.service.cf.internal:9090
  cc.diego.use_privileged_containers_for_running:
    description: "Whether or not to use privileged containers for running buildpack apps and tasks."
    default: false
  cc.diego.use_privileged_containers_for_staging:
    description: "Whether or not to use privileged containers for staging tasks."
    default: false
  cc.diego.lifecycle_bundles:
    description: "List of lifecycle bundles arguments for different stacks"
    default:
      "buildpack/cflinuxfs2": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
      "buildpack/windows2012R2": "windows_app_lifecycle/windows_app_lifecycle.tgz"
      "buildpack/windows2016": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
      "docker": "docker_app_lifecycle/docker_app_lifecycle.tgz"

  cc.diego.temporary_local_staging:
    description: "Temporary flag to enable staging directly to the bbs from cc"
    default: false
  cc.diego.temporary_local_tasks:
    description: "Temporary flag to run tasks directly to the bbs from cc"
    default: false
  cc.diego.temporary_local_apps:
    description: "Temporary flag to manage app state directly to the bbs from cc"
    default: false
  cc.diego.temporary_local_sync:
    description: "Temporary flag to manage app state directly to the bbs from cc"
    default: false
  cc.diego.temporary_local_tps:
    description: "Temporary flag to manage app state directly to the bbs from cc"
    default: false
  cc.diego.temporary_cc_uploader_mtls:
    description: "Temporary flag to ensure droplet upload callback endpoints require mTLS"
    default: false
  cc.diego.temporary_droplet_download_mtls:
    description: "Temporary flag to enable mTLS droplet download to the bbs from cc"
    default: false
  cc.diego.temporary_oci_buildpack_mode:
    description: "Temporary flag to enable OCI buildpack flow. Valid values: 'oci-phase-1'"
    default: ~
  cc.diego.pid_limit:
    description: "Maximum pid limit for containerized work running user-provided code"
    default: 1024
