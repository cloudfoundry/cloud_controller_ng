---
name: cloud_controller_worker

description: "Cloud Controller worker processes background tasks submitted via the."

templates:
  cloud_controller_worker.yml.erb: config/cloud_controller_ng.yml
  cloud_controller_worker_ctl.erb: bin/cloud_controller_worker_ctl
  setup_local_blobstore.sh.erb: bin/setup_local_blobstore.sh
  newrelic.yml.erb: config/newrelic.yml
  stacks.yml.erb: config/stacks.yml
  ruby_version.sh.erb: bin/ruby_version.sh
  console.erb: bin/console
  blobstore_waiter.sh.erb: bin/blobstore_waiter.sh
  pre-start.sh.erb: bin/pre-start
  buildpacks_ca_cert.pem.erb: config/certs/buildpacks_ca_cert.pem
  droplets_ca_cert.pem.erb: config/certs/droplets_ca_cert.pem
  packages_ca_cert.pem.erb: config/certs/packages_ca_cert.pem
  resource_pool_ca_cert.pem.erb: config/certs/resource_pool_ca_cert.pem
  mutual_tls_ca.crt.erb: config/certs/mutual_tls_ca.crt
  mutual_tls.crt.erb: config/certs/mutual_tls.crt
  mutual_tls.key.erb: config/certs/mutual_tls.key

packages:
  - capi_utils
  - cloud_controller_ng
  - nginx
  - nginx_newrelic_plugin
  - libpq
  - libmariadb
  - ruby-2.3

properties:
  ssl.skip_cert_verify:
    description: "specifies that the job is allowed to skip ssl cert verification"
    default: false

  domain:
    description: "Deprecated in favor of system_domain. Domain where cloud_controller will listen (api.domain)"
  system_domain:
    description: "Domain reserved for CF operator, base URL where the login, uaa, and other non-user apps listen"
  system_domain_organization:
    description: "An organization that will be created as part of the seeding process. When the system_domain is not shared with (in the list of) app_domains, this is required as the system_domain will be created as a PrivateDomain in this organization."
    default: ""
  app_domains:
    description: "Array of domains for user apps (example: 'user.app.space.foo', a user app called 'neat' will listen at 'http://neat.user.app.space.foo')"
    example:  |
      - name: example.com
      - name: tcp.example.com
        router_group_name: default-tcp

  nats.user:
    description: "Username for cc client to connect to NATS"
  nats.password:
    description: "Password for cc client to connect to NATS"
  nats.port:
    description: "IP port of Cloud Foundry NATS server"
  nats.machines:
    description: "IP of each NATS cluster member."

  nfs_server.address:
    description: "NFS server for droplets and apps (not used in an AWS deploy, use s3 instead)"
  nfs_server.share_path:
    description: "The location at which to mount the nfs share"
    default: "/var/vcap/nfs"

  request_timeout_in_seconds:
    description: "Timeout for requests in seconds."
    default: 900

  name:
    description: "'name' attribute in the /v2/info endpoint"
    default: ""
  build:
    description: "'build' attribute in the /v2/info endpoint"
    default: ""
  version:
    description: "'version' attribute in the /v2/info endpoint"
    default: 0
  support_address:
    description: "'support' attribute in the /v2/info endpoint"
    default: ""
  description:
    description: "'description' attribute in the /v2/info endpoint"
    default: ""

  cc.external_port:
    description: "External Cloud Controller port"
    default: 9022
  cc.tls_port:
    description: "External Cloud Controller port"
    default: 9023
  cc.internal_service_hostname:
    description: "Internal hostname used to resolve the address of the Cloud Controller"
    default: "cloud-controller-ng.service.cf.internal"

  cc.jobs.global.timeout_in_seconds:
    description: "The longest any job can take before it is cancelled unless overriden per job"
    default: 14400 # 4 hours
  cc.jobs.app_bits_packer.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.app_events_cleanup.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.app_usage_events_cleanup.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.blobstore_delete.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.blobstore_upload.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.droplet_deletion.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"
  cc.jobs.droplet_upload.timeout_in_seconds:
    description: "The longest this job can take before it is cancelled"

  cc.app_events.cutoff_age_in_days:
    description: "How old an app event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.app_usage_events.cutoff_age_in_days:
    description: "How old an app usage event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.service_usage_events.cutoff_age_in_days:
    description: "How old a service usage event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.audit_events.cutoff_age_in_days:
    description: "How old an audit event should stay in cloud controller database before being cleaned up"
    default: 31
  cc.failed_jobs.cutoff_age_in_days:
    description: "How old a failed job should stay in cloud controller database before being cleaned up"
    default: 31
  cc.completed_tasks.cutoff_age_in_days:
    description: "How long a completed task will stay in cloud controller database before being cleaned up based on last updated time with success or failure."
    default: 31

  cc.external_protocol:
    default: "https"
    description: "The protocol used to access the CC API from an external entity"
  cc.external_host:
    default: "api"
    description: "Host part of the cloud_controller api URI, will be joined with value of 'domain'"
  cc.cc_partition:
    default: "default"
    description: "Deprecated. Defines a 'partition' for the health_manager job"

  cc.bulk_api_user:
    default: "bulk_api"
    description: "User used to access the bulk_api, health_manager uses it to connect to the cc, announced over NATS"
  cc.bulk_api_password:
    description: "Password used to access the bulk_api, health_manager uses it to connect to the cc, announced over NATS"

  cc.internal_api_user:
    default: "internal_user"
    description: "User name used by Diego to access internal endpoints"
  cc.internal_api_password:
    description: "Password used by Diego to access internal endpoints"

  cc.uaa_resource_id:
    default: "cloud_controller,cloud_controller_service_permissions"
    description: "Name of service to register to UAA"

  cc.db_logging_level:
    default: "debug2"
    description: "Log level for cc database operations"

  cc.logging_level:
    default: "info"
    description: "Log level for cc"
  cc.logging_max_retries:
    default: 1
    description: "Passthru value for Steno logger"

  cc.staging_timeout_in_seconds:
    default: 900
    description: "Timeout for staging a droplet"
  cc.default_health_check_timeout:
    default: 60
    description: "Default health check timeout (in seconds) that can be set for the app"
  cc.maximum_health_check_timeout:
    default: 180
    description: "Maximum health check timeout (in seconds) that can be set for the app"

  cc.shared_isolation_segment_name:
    default: "shared"
    description: |
      Name of the shared isolation segment created at startup.
      This field can be updated, but subject to the following caveat:
         Using the name of an existing IS will cause a deployment to fail.
         To recover, redeploy using the last valid Shared Isolation Segment name.

  cc.stacks:
    default:
      - name: "cflinuxfs2"
        description: "Cloud Foundry Linux-based filesystem"
    description: "Tag used by the DEA to describe capabilities (i.e. 'Windows7', 'python-linux'). DEA and CC must agree."
  cc.default_stack:
    default: "cflinuxfs2"
    description: "The default stack to use if no custom stack is specified by an app."

  cc.staging_upload_user:
    default: ""
    description: "User name used to access internal endpoints of Cloud Controller to upload files when staging"
  cc.staging_upload_password:
    default: ""
    description: "User's password used to access internal endpoints of Cloud Controller to upload files when staging"

  cc.quota_definitions:
    description: "Hash of default quota definitions. Overriden by custom quota definitions."

  cc.default_quota_definition:
    default: default
    description: "Local to use a local (NFS) file system.  AWS to use AWS."

  cc.resource_pool.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.resource_pool.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.resource_pool.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.resource_pool.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.resource_pool.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.resource_pool.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.resource_pool.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.resource_pool.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.resource_pool.minimum_size:
    description: "Minimum size of a resource to add to the pool"
    default: 65536
  cc.resource_pool.maximum_size:
    description: "Maximum size of a resource to add to the pool"
    default: 536870912
  cc.resource_pool.resource_directory_key:
    description: "Directory (bucket) used store app resources.  It does not have be pre-created."
    default: "cc-resources"
  cc.resource_pool.fog_connection:
    description: "Fog connection hash"
  cc.resource_pool.cdn.uri:
    description: "URI for a CDN to used for resource pool downloads"
    default: ""
  cc.resource_pool.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.resource_pool.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.packages.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.packages.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.packages.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.packages.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.packages.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.packages.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.packages.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.packages.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.packages.app_package_directory_key:
    description: "Directory (bucket) used store app packages.  It does not have be pre-created."
    default: "cc-packages"
  cc.packages.max_package_size:
    description: "Maximum size of application package"
    default: 1073741824
  cc.packages.fog_connection:
    description: "Fog connection hash"
  cc.packages.cdn.uri:
    description: "URI for a CDN to used for app package downloads"
    default: ""
  cc.packages.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.packages.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.droplets.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.droplets.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.droplets.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.droplets.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.droplets.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.droplets.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.droplets.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.droplets.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.droplets.droplet_directory_key:
    description: "Directory (bucket) used store droplets.  It does not have be pre-created."
    default: "cc-droplets"
  cc.droplets.fog_connection:
    description: "Fog connection hash"
  cc.droplets.cdn.uri:
    description: "URI for a CDN to used for droplet downloads"
    default: ""
  cc.droplets.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.droplets.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  cc.buildpacks.blobstore_type:
    description: "The type of blobstore backing to use. Valid values: ['fog', 'webdav']"
    default: "fog"
  cc.buildpacks.fog_aws_storage_options:
    description: "Storage options passed to fog for aws blobstores. Valid keys: ['encryption']."
  cc.buildpacks.webdav_config.blobstore_timeout:
    description: "The timeout in seconds for requests to the blobstore"
    default: 5
  cc.buildpacks.webdav_config.public_endpoint:
    description: "The location of the webdav server eg: https://blobstore.com"
    default: ""
  cc.buildpacks.webdav_config.private_endpoint:
    description: "The location of the webdav server eg: https://blobstore.internal"
    default: "https://blobstore.service.cf.internal:4443"
  cc.buildpacks.webdav_config.username:
    description: "The basic auth user that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.buildpacks.webdav_config.password:
    description: "The basic auth password that CC uses to connect to the admin endpoint on webdav"
    default: ""
  cc.buildpacks.webdav_config.ca_cert:
    description: "The ca cert to use when communicating with webdav"
    default: ""
  cc.buildpacks.buildpack_directory_key:
    description: "Directory (bucket) used store buildpacks.  It does not have be pre-created."
    default: "cc-buildpacks"
  cc.buildpacks.fog_connection:
    description: "Fog connection hash"
  cc.buildpacks.cdn.uri:
    description: "URI for a CDN to used for buildpack downloads"
    default: ""
  cc.buildpacks.cdn.private_key:
    description: "Private key for signing download URIs"
    default: ""
  cc.buildpacks.cdn.key_pair_id:
    description: "Key pair name for signed download URIs"
    default: ""

  ccdb.databases:
    description: "Contains the name of the database on the database server"
  ccdb.roles:
    description: "Users to create on the database when seeding"
  ccdb.db_scheme:
    description: "The type of database being used. mysql or postgres"
    default: postgres
  ccdb.address:
    description: "The address of the database server"
  ccdb.db_type:
    description: "The database type of database, mssql or sqlanywhere"
  ccdb.azure:
    description: "Whether the database is an azure sql server or not"
  ccdb.port:
    description: "The port of the database server"
  ccdb.max_connections:
    default: 25
    description: "Maximum connections for Sequel"
  ccdb.pool_timeout:
    default: 10
    description: "The timeout for Sequel pooled connections"

  uaa.cc.token_secret:
    description: "Symmetric secret used to decode uaa tokens. Used for testing."
  uaa.url:
    description: "URL of the UAA server"
  login.protocol:
    description: "http or https"
    default: "https"
  login.url:
    description: "URL of the login server"
  hm9000.url:
    description: "URL of the hm9000 server"
  hm9000.port:
    description: "Port of the hm9000 Api Server"
    default: 5155

  uaa.jwt.verification_key:
    default: ""
    description: "ssl cert defined in the manifest by the UAA, required by the cc to communicate with UAA"
  login.enabled:
    default: true
    description: "whether use login as the authorization endpoint or not"

  metron_endpoint.host:
    description: "The host used to emit messages to the Metron agent"
    default: "127.0.0.1"
  metron_endpoint.port:
    description: "The port used to emit messages to the Metron agent"
    default: 3457

  logger_endpoint.use_ssl:
    description: "Whether to use ssl for logger endpoint listed at /v2/info"
    default: true
  logger_endpoint.port:
    description: "Port for logger endpoint listed at /v2/info"
    default: 443

  cc.db_encryption_key:
    default: ""
    description: "key for encrypting sensitive values in the CC database"

  cc.default_app_memory:
    default: 1024
    description: "How much memory given to an app if not specified"
  cc.default_app_disk_in_mb:
    default: 1024
    description: "The default disk space an app gets"
  cc.maximum_app_disk_in_mb:
    default: 2048
    description: "The maximum amount of disk a user can request"
  cc.users_can_select_backend:
    default: true
    description: "Allow non-admin users to switch their apps between DEA and Diego backends"
  cc.default_to_diego_backend:
    default: false
    description: "Use Diego backend by default for new apps"
  cc.allow_app_ssh_access:
    default: true
    description: "Allow users to change the value of the app-level allow_ssh attribute"
  cc.default_app_ssh_access:
    default: true
    description: "When ssh is allowed and not explicitly set in the application, new applications will start with ssh service enabled"
  cc.flapping_crash_count_threshold:
    default: 3
    description: "The threshold of crashes after which the app is marked as flapping"
  cc.client_max_body_size:
    default: "1536M"
    description: "Maximum body size for nginx"

  cc.disable_custom_buildpacks:
    default: false
    description: "Disable external (i.e. git) buildpacks? (Admin buildpacks and system buildpacks only.)"

  cc.broker_client_timeout_seconds:
    default: 60
    description: "For requests to service brokers, this is the HTTP (open and read) timeout setting."

  cc.development_mode:
    default: false
    description: "Enable development features for monitoring and insight"

  cc.newrelic.license_key:
    default: ~
    description: "The api key for NewRelic"
  cc.newrelic.environment_name:
    default: "development"
    description: "The environment name used by NewRelic"
  cc.newrelic.developer_mode:
    default: false
    description: "Activate NewRelic developer mode"
  cc.newrelic.monitor_mode:
    default: false
    description: "Activate NewRelic monitor mode"
  cc.newrelic.log_file_path:
    default: "/var/vcap/sys/log/cloud_controller_ng/newrelic"
    description: "The location for NewRelic to log to"
  cc.newrelic.capture_params:
    default: false
    description: "Capture and send query params to NewRelic"
  cc.newrelic.transaction_tracer.enabled:
    default: false
    description: "Enable transaction tracing in NewRelic"
  cc.newrelic.transaction_tracer.record_sql:
    default: "off"
    description: "NewRelic's SQL statement recording mode: [off | obfuscated | raw]"

  cc.jobs.generic.number_of_workers:
    default: 1
    description: "Number of generic cloud_controller_worker workers"

  dea_next.staging_memory_limit_mb:
    description: "Memory limit in mb for staging tasks"
    default: 1024
  dea_next.staging_disk_limit_mb:
    description: "Disk limit in mb for staging tasks"
    default: 6144
  cc.staging_file_descriptor_limit:
    description: "File descriptor limit for staging tasks"
    default: 16384

  cc.renderer.max_results_per_page:
    description: "Maximum number of results returned per page"
    default: 100
  cc.renderer.default_results_per_page:
    description: "Default number of results returned per page if user does not specify"
    default: 50
  cc.renderer.max_inline_relations_depth:
    description: "Maximum depth of inlined relationships in the result"
    default: 2
  cc.app_bits_upload_grace_period_in_seconds:
    description: "Extra token expiry time while uploading big apps."
    default: 1200

  uaa.clients.cc_service_broker_client.secret:
    description: "(DEPRECATED) - Used for generating SSO clients for service brokers."
  uaa.clients.cc_service_broker_client.scope:
    description: "(DEPRECATED) - Used to grant scope for SSO clients for service brokers"
    default: "openid,cloud_controller_service_permissions.read"

  uaa.clients.cc-service-dashboards.secret:
    description: "Used for generating SSO clients for service brokers."
  uaa.clients.cc-service-dashboards.scope:
    description: "Used to grant scope for SSO clients for service brokers"
    default: "openid,cloud_controller_service_permissions.read"

  cc.install_buildpacks:
    description: "Set of buildpacks to install during deploy"

  cc.security_group_definitions:
    description: "Array of security groups that will be seeded into CloudController."
  cc.default_running_security_groups:
    description: "The default running security groups that will be seeded in CloudController."
  cc.default_staging_security_groups:
    description: "The default staging security groups that will be seeded in CloudController."

  cc.thresholds.worker.alert_if_above_mb:
    description: "The cc will alert if memory remains above this threshold for 3 monit cycles"
    default: 384
  cc.thresholds.worker.restart_if_consistently_above_mb:
    description: "The cc will restart if memory remains above this threshold for 15 monit cycles"
    default: 384
  cc.thresholds.worker.restart_if_above_mb:
    description: "The cc will restart if memory remains above this threshold for 3 monit cycles"
    default: 512

  cc.instance_file_descriptor_limit:
    description: "The file descriptors made available to each app instance"
    default: 16384

  cc.broker_client_default_async_poll_interval_seconds:
    default: 60
    description: "Specifies interval on which the CC will poll a service broker for asynchronous actions"

  cc.broker_client_max_async_poll_duration_minutes:
    default: 10080
    description: "The max duration the CC will fetch service instance state from a service broker. Default is 1 week"

  cc.reserved_private_domains:
    description: "File location of a list of reserved private domains (for file format, see https://publicsuffix.org/)"
    default: ~

  cc.system_hostnames:
    description: "List of hostnames for which routes cannot be created on the system domain."
    default: [api,uaa,login,doppler,loggregator,hm9000]

  cc.bits_service.enabled:
    description: "Enable integration of the bits-service incubator (experimental)"
    default: false
  cc.bits_service.public_endpoint:
    description: "Public url for the bits-service service"
    default: ""
  cc.bits_service.private_endpoint:
    description: "Private url for the bits-service service"
    default: ""
  cc.bits_service.username:
    description: "Username for the bits-service"
    default: ""
  cc.bits_service.password:
    description: "Password for the bits-service"
    default: ""

  cc.diego.bbs.url:
    description: "URL of the BBS Server"
    default: https://bbs.service.cf.internal:8889

  cc.mutual_tls.ca_cert:
    description: "PEM-encoded CA certificate for secure, mutually authenticated TLS communication"
    default: "temporary default, remove with temporary_local_staging"
  cc.mutual_tls.public_cert:
    description: "PEM-encoded certificate for secure, mutually authenticated TLS communication"
    default: "temporary default, remove with temporary_local_staging"
  cc.mutual_tls.private_key:
    description: "PEM-encoded key for secure, mutually authenticated TLS communication"
    default: "temporary default, remove with temporary_local_staging"


  cc.diego.nsync_url:
    default: http://nsync.service.cf.internal:8787
    description: "URL of the Diego nsync service"
  cc.diego.stager_url:
    default: http://stager.service.cf.internal:8888
    description: "URL of the Diego stager service"
  cc.diego.tps_url:
    default: http://tps.service.cf.internal:1518
    description: "URL of the Diego tps service"
  cc.diego.file_server_url:
    description: "URL of file server"
    default: http://file-server.service.cf.internal:8080
  cc.diego.cc_uploader_url:
    description: "URL of cc uploader"
    default: http://cc-uploader.service.cf.internal:9090
  cc.diego.use_privileged_containers_for_running:
    description: "Whether or not to use privileged containers for running buildpack apps and tasks."
    default: false
  cc.diego.use_privileged_containers_for_staging:
    description: "Whether or not to use privileged containers for staging tasks."
    default: false
  cc.diego.lifecycle_bundles:
    description: "List of lifecycle bundles arguments for different stacks"
    default:
      "buildpack/cflinuxfs2": "buildpack_app_lifecycle/buildpack_app_lifecycle.tgz"
      "buildpack/windows2012R2": "windows_app_lifecycle/windows_app_lifecycle.tgz"
      "docker": "docker_app_lifecycle/docker_app_lifecycle.tgz"

  cc.diego.temporary_local_staging:
    description: "Temporary flag to enable staging directly to the bbs from cc"
    default: false
  cc.diego.temporary_local_tasks:
    description: "Temporary flag to run tasks directly to the bbs from cc"
    default: false
  cc.diego.temporary_local_apps:
    description: "Temporary flag to manage app state directly to the bbs from cc"
    default: false
