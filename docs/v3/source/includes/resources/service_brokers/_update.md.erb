### Update a service broker

```
Example Request
```

```shell
curl "https://api.example.org/v3/service_brokers/[guid]" \
  -X PATCH \
  -H "Authorization: bearer [token]" \
  -H "Content-type: application/json" \
  -d '{
    "name": "my_service_broker",
    "url": "https://example.service-broker.com",
    "authentication": {
      "type": "basic",
      "credentials": {
        "username": "us3rn4me",
        "password": "p4ssw0rd"
      }
    },
    "metadata": {
      "labels": {"key": "value"},
      "annotations": {"note": "detailed information"}
    }
  }'
```

```
Example Response with job
```

```http
HTTP/1.1 202 Accepted
Content-Type: application/json
Location: https://api.example.org/v3/jobs/af5c57f6-8769-41fa-a499-2c84ed896788
```

```
Example Response without job
```

```http
HTTP/1.1 200 OK
Content-Type: application/json

<%= yield_content :single_service_broker %>
```

This endpoint updates a service broker. If the parameters include
`url` or `authentication`, then the endpoint will enqueue a background job to
synchronize the service offerings and service plans with those in the broker's catalog.
For updates that consist of only `name` or `metadata`, the update is
processed immediately, and the service broker's catalog is not synchronized.

When a service broker has a synchronization job in progress, only
updates with `name` and `metadata` are permitted until the synchronization job
is complete.

#### Definition
`PATCH /v3/service_brokers/:guid`

#### Optional parameters

Name | Type | Description
---- | ---- | -----------
**name** | _string_ | Name of the service broker
**url** | _string_ | URL of the service broker
**authentication** | [_authentication_](#the-authentication-object) | Credentials used to authenticate against the service broker
**metadata.labels** | [_label object_](#labels) | Labels applied to the service broker
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the service broker


<%= yield_content :service_broker_credentials_object %>

#### Permitted roles
 |
--- | ---
Admin |
Space Developer (only space-scoped brokers) |
