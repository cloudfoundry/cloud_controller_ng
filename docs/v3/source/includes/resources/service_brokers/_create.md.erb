### Create a service broker

```
Example Request
```

```shell
curl "https://api.example.org/v3/service_brokers" \
  -X POST \
  -H "Authorization: bearer [token]" \
  -H "Content-type: application/json" \
  -d '{
    "name": "my_service_broker",
    "url": "https://example.service-broker.com",
    "authentication": {
      "type": "basic",
      "credentials": {
        "username": "us3rn4me",
        "password": "p4ssw0rd"
      }
    },
    "relationships": {
      "space": {
        "data": {
          "guid": "2f35885d-0c9d-4423-83ad-fd05066f8576"
        }
      }
    }
  }'
```

```
Example Response
```

```http
HTTP/1.1 202 Accepted
Content-Type: application/json
Location: https://api.example.org/v3/jobs/af5c57f6-8769-41fa-a499-2c84ed896788
```

This endpoint creates a new service broker and a job to synchronize the service offerings and service plans with those in the broker's catalog.
The `Location` header refers to the created job which syncs the broker with the catalog. See [_Service broker jobs_](#service-broker-jobs) for more information and limitations.


#### Definition
`POST /v3/service_brokers`

#### Required parameters

Name | Type | Description
---- | ---- | -----------
**name** | _string_ | Name of the service broker.
**url** | _string_ | URL of the service broker.
**authentication** | [_authentication_](#the-authentication-object) | Credentials used to authenticate against the service broker.

#### Optional parameters

Name | Type | Description |
---- | ---- | ----------- |
**relationships.space** | [_to-one relationship_](#to-one-relationships) | If set, restricts the service broker to the specified space.
**metadata.labels** | [_label object_](#labels) | Labels applied to the service broker.
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the service broker.

<%= yield_content :service_broker_credentials_object %>

#### Permitted roles
 |
--- | ---
Admin |
Space Developer* |

*Space Developers can only create space-scoped brokers. Space-scoped brokers can only be created when the `space_scoped_private_broker_creation` feature flag is `true`.
