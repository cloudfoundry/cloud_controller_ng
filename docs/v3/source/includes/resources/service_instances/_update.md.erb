### Update a service instance

```
Example Request for Managed Service Instance
```

```shell
curl "https://api.example.org/v3/service_instances/[guid]" \
  -X PATCH \
  -H "Authorization: bearer [token]" \
  -H "Content-Type: application/json" \
  -d '{
    "name": "my_service_instance",
    "parameters": {
      "foo": "bar",
      "baz": "qux"
    },
    "tags": ["foo", "bar", "baz"],
    "relationships": {
      "service_plan": {
        "data": {
          "guid": "f2b6ba9c-a4d2-11ea-8ae6-48bf6bec2d78"
        }
      }
    },
    "metadata": {
      "annotations": {
        "note": "detailed information"
      },
      "labels": {
        "key": "value"
      }
    }
  }'
```

```
(Experimental) Example Request for Managed Service Instance Upgrade (maintenance_info update)
```

```shell
curl "https://api.example.org/v3/service_instances/[guid]" \
  -X PATCH \
  -H "Authorization: bearer [token]" \
  -H "Content-Type: application/json" \
  -d '{
    "maintenance_info": {
      "version": "2.1.1"
    }
  }'
```

```
Example Synchronous Response for Managed Service Instance:
```

```http
HTTP/1.1 200 OK
Content-Type: application/json

<%= yield_content :single_managed_service_instance, operation: "update", labels: { "key" => "value" }, annotations: {"note" => "detailed information"} %>
```

```
Example Asynchronous Response for Managed Service Instance:
```

```http
HTTP/1.1 202 Accepted
Content-Type: application/json
Location: https://api.example.org/v3/jobs/af5c57f6-8769-41fa-a499-2c84ed896788
```

```
(Experimental) Example Request for User-Provided Service Instance
```

```shell
curl "https://api.example.org/v3/service_instances/[guid]" \
  -X PATCH \
  -H "Authorization: bearer [token]" \
  -H "Content-type: application/json" \
  -d '{
    "name": "my_service_instance",
    "credentials": {
      "foo": "bar",
      "baz": "qux"
    },
    "tags": ["foo", "bar", "baz"],
    "syslog_drain_url": "https://syslog.com/drain",
    "route_service_url": "https://route.com/service",
    "metadata": {
      "annotations": {
        "foo": "bar"
      },
      "labels": {
        "baz": "qux"
      }
    }
  }'
```

```
(Experimental) Example Response for User-Provided Service Instance
```

```http
HTTP/1.1 200 OK
Content-Type: application/json

<%= yield_content :single_user_provided_service_instance, labels: { "baz" => "qux" }, annotations: {"foo" => "bar"} %>
```

#### Definition
`PATCH /v3/service_instances/:guid`

#### Optional parameters for managed service instances

Name | Type | Description
---- | ---- | -----------
**name** (*experimental*)| _string_ | Name of the service instance.
**tags** (*experimental*)| _array of strings_ | Tags are used by apps to identify service instances. They are shown in the app VCAP_SERVICES env.
**parameters** (*experimental*)| _object_ | A JSON object that is passed to the service broker.
**relationships.service_plan** (*experimental*)| [_to-one relationship_](#to-one-relationships) | The service plan from which to create the service instance.
**maintenance_info** (*experimental*)| _[maintenance_info object](#the-maintenance-info-object-for-service-instances)_ | if provided it must have the `version` field. `version` must be a semantic version value and it must match the `version` in the `maintenance_info` for the service instance plan in the updated broker catalog. Any other value for `version` will cause a `MaintenanceInfoConflict` error
**metadata.labels** | [_label object_](#labels) | Labels applied to the service_instance.
**metadata.annotations**  | [_annotation object_](#annotations) | Annotations applied to the service_instance.

Some updates can be performed entirely within the Cloud Controller in which case the response is synchronous.
Some updates require communication with the service broker, in which case the response will be asynchronous.
The response will be asynchronous if:

* `parameters` are specified
* `service_plan` is specified
* `name` is specified and the service offering has the `allow_context_updates` feature enabled

Otherwise the response will be synchronous.

#### Optional parameters for user-provided service instances

Name | Type | Description |
---- | ---- | ----------- |
**name** (*experimental*)| _string_ | Name of the service instance.
**tags** (*experimental*)| _array of strings_ | Tags are used by apps to identify service instances. They are shown in the app VCAP_SERVICES env.
**credentials** (*experimental*)| _object_ | A JSON object that is made available to apps bound to this service instance.
**syslog_drain_url** (*experimental*)| _string_ | URL to which logs for bound applications will be streamed.
**route_service_url** (*experimental*)| _string_ | URL to which requests for bound routes will be forwarded. Must use the `https` protocol.
**metadata.labels** (*experimental*)| [_label object_](#labels) | Labels applied to the service_instance.
**metadata.annotations** (*experimental*)| [_annotation object_](#annotations) | Annotations applied to the service_instance.

#### Permitted roles
 |
--- | ---
Admin |
Space Developer |
