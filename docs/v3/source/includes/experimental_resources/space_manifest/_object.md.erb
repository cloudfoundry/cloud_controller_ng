The space manifest is a method for applying bulk configurations to apps and their underlying processes.
### The space manifest specification

```
Example Manifest
```

```yaml
---
applications:
- name: app1
  buildpacks:
  - ruby_buildpack
  - java_buildpack
  env:
    VAR1: value1
    VAR2: value2
  routes:
  - route: route.example.com
  - route: another-route.example.com
  services:
  - my-service1
  - my-service2
  - name: my-service-with-arbitrary-params
    parameters:
      key1: value1
      key2: value2
  stack: cflinuxfs3
  metadata:
    annotations:
      contact: "bob@example.com jane@example.com"
    labels:
      sensitive: true
  processes:
  - type: web
    command: start-web.sh
    disk_quota: 512M
    health-check-http-endpoint: /healthcheck
    health-check-type: http
    health-check-invocation-timeout: 10
    instances: 3
    memory: 500M
    timeout: 10
  - type: worker
    command: start-worker.sh
    disk_quota: 1G
    health-check-type: process
    instances: 2
    memory: 256M
    timeout: 15
- name: app2
  env:
    VAR1: value1
  processes:
  - type: web
    instances: 1
    memory: 256M
  sidecars:
  - name: authenticator
    process_types: [ 'web', 'worker' ]
    command: bundle exec run-authenticator
    memory: 800M

  - name: upcaser
    process_types: [ 'worker' ]
    command: ./tr-server
    memory: 2G
```

#### Space-level configuration

Field | Description
---- | -----------
**applications**  | An array of App configurations

#### App-level configuration
This configuration is specified at the top-level and applies to all of the app's processes.

Field | Description
---- | -----------
**buildpacks**  | Must be an Array. <br>a) An empty array, which will automatically select the appropriate default buildpack according to the coding language. <br>b) An array of one or more URLs pointing to buildpacks. <br>c) An array of one or more installed buildpack names. <br>Replaces the legacy `buildpack` field.
**docker** | If present, the created app will have Docker lifecycle type. The value of this key is ignored by the API but may be used by clients to source the registry address of the image and credentials, if needed. The [generate manifest endpoint](#generate-an-app-manifest) will return the registry address of the image and username provided with this key.
**env** | A key-value hash of environment variables to be used for the app when running.
**no-route** | Boolean value. When set to `true`, any routes specified with the `routes` attribute will be ignored and any existing routes will be removed; ignored if `false`.
**processes** | List of configurations for individual process types. See [_Process-level configuration_](#space-manifest-process-level-configuration).
**random-route** | Boolean value. Creates a random route for the app if `true`; ignored if `false`, if `routes` is specified, if the app already has routes, or if `no-route` is specified.
**default-route** | Boolean value. If true, a route for the app will be created using the app name as the hostname and the containing organization's default domain as the domain. If `false`, if `routes` is specified, if the app already has routes, or if `no-route` is specified, this field is ignored and results in noop.
**routes** | An array of route hashes declaring HTTP and TCP routes to be mapped to the app. Each route is created if it does not already exist. Example route hash entry: `- route: www.example.com/path`
**services** | An array of service-instances to bind to the app. See [_Service-level configuration_](#space-manifest-service-level-configuration).
**sidecars** | An array of configurations for individual sidecars. See [_Sidecar-level configuration_](#space-manifest-sidecar-level-configuration).
**stack** | The root filesystem to use with the buildpack, for example `cflinuxfs3`.
**metadata.labels** _(experimental)_ | [Labels](#labels) applied to the app.
**metadata.annotations** _(experimental)_ | [Annotations](#annotations) applied to the app.
**buildpack**  | **DEPRECATED in favor of the `buildpacks` field above.** <br> a) Blank OR `default` OR `null` will automatically select the appropriate default buildpack according to the coding language. <br>b) A URL pointing to a buildpack. <br>c) Name of an installed buildpack.


#### <a name="space-manifest-process-level-configuration"></a> Process-level configuration
This configuration is for the individual process. Each process is created if it does not already exist.

With the exception of `type`, process-level fields can also be provided at the top-level and will apply to the `web` process only.

If there is a process with `type: web` defined in the processes section, then all top level process configuration will be ignored.

Field | Description
---- | -----------
**type** | **(Required)** Process type. The identifier for the processes to be configured.
**command** | The command used to start the process. This overrides start commands from [Procfiles](#procfiles) and buildpacks.
**disk_quota** | The disk limit for all instances of the web process. <br>This attribute requires a unit of measurement: `B`, `K`, `KB`, `M`, `MB`, `G`, `GB`, `T`, or `TB` in upper case or lower case.
**health-check-http-endpoint** | Endpoint called to determine if the app is healthy.
**health-check-invocation-timeout** | The timeout in seconds for individual health check requests for http and port health checks.
**health-check-type** | Type of health check to perform. `none` is deprecated and an alias to `process`.
**instances** | The number of instances to run.
**memory** | The memory limit for all instances of the web process. <br>This attribute requires a unit of measurement: `B`, `K`, `KB`, `M`, `MB`, `G`, `GB`, `T`, or `TB` in upper case or lower case.
**timeout** | Time in seconds at which the health-check will report failure.

####  <a name="space-manifest-service-level-configuration"></a> Service-level configuration
This configuration is _creating_ new service bindings between the app and a service instance. The `services` field can
take either an array of service instance name strings or an array of the following service-level fields.

Field | Description
---- | -----------
**name** | **(Required)** Service instance name.  The name of the service instance to be bound to.
**parameters** | A map of arbitrary key/value pairs to send to the service broker during binding.


####  <a name="space-manifest-sidecar-level-configuration"></a> Sidecar-level configuration
This configuration is for the individual sidecar.  Each sidecar is created if it does not already exist.

Field | Description
---- | -----------
**name** | **(Required)** Sidecar name.  The identifier for the sidecars to be configured.
**command** | The command used to start the sidecar.
**process_types** | List of processes to associate sidecar with.
**memory** | Memory in mb that the sidecar will be allocated.

